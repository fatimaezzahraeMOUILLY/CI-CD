# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages


variables:
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=${CI_PROJECT_DIR}/m2/repository"
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version"
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
  GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task


cache:
  paths:
    - .m2/repository/


image: maven:3.6.3-jdk-11

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy
  - docker

include:
  - template: Security/Dependency-Scanning.gitlab-ci.yml

compile-job:      
  stage: build
  script:
    - mvn clean compile

build-job:
  stage: build
  script:
    - echo "Compiling the code..."
    - echo $CI_COMMIT_REF_NAME
    - echo $CI_PROJECT_DIR
    - mvn $MAVEN_CLI_OPTS clean install
    - echo "Compile complete."
  artifacts:
    expire_in: 30 min
    paths: 
      - target/*.jar

sonarcloud-check:
  image: maven:3-openjdk-17
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  stage: test  # Changing stage to 'test'

  script:
    - mvn $MAVEN_CLI_OPTS verify sonar:sonar -Dsonar.projectKey=Fatimaezzahraemouilly_projet-gitlab -Dsonar.qualitygate.wait=true
  only:
    - merge_requests
    - master
    - develop

unit-test-job:
  stage: test
  script:
    - echo "Running unit tests..."
    - mvn $MAVEN_CLI_OPTS test
    - echo "Unit tests complete."
  artifacts:
    reports:
      junit:
        - target/surefire-reports/TEST-*.xml

lint-test-job:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "Linting code... This will take about 10 seconds."
    - sleep 10
    - echo "No lint issues found."

deploy-job:      # This job runs in the deploy stage.
  environment: production 
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."

docker-job:
  stage: docker
  image : docker:20.10.16
  services : 
    - docker:20.10.16-dind 
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $IMAGE_TAG .
    - docker push $IMAGE_TAG
